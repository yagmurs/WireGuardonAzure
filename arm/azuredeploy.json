{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "VM size"
            },
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s",
                "Standard_B2s"
            ]
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username for Virtual Machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password for Virtual Machine"
            }
        },
        "wireGuardUdpPort": {
            "type": "string",
            "defaultValue": "443",
            "metadata": {
                "description": "Wireguard port"
            }
        },
        "_artifactsLocation": {
        "type": "string",
        "defaultValue": "https://raw.githubusercontent.com/yagmurs/WireGuardonAzure/master",
        "metadata": {
            "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "description"
            }
        }
    },
    "functions": [],
    "variables": {
        "uniqueString": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]",
        "nsgName": "[concat(variables('uniqueString'), '-nsg')]",
        "publicIP": "[concat(variables('uniqueString'), '-PublicIP')]",
        "vNet": "[concat(variables('uniqueString'), '-vNet')]",
        "subnet": "[concat(variables('vNet'), '-subnet')]",
        "vmNic": "[concat(variables('uniqueString'), '-nic')]"
    },
    "resources": [
        {
            "name": "[variables('publicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('uniqueString'))]"
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "ssh port",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "wireGuardUdpPort",
                        "properties": {
                            "description": "WireGuard incoming port",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[parameters('wireGuardUdpPort')]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vNet')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('vNet')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmNic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNet'))]"
            ],
            "tags": {
                "displayName": "[variables('vmNic')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNet'), variables('subnet'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('uniqueString')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNic'))]"
            ],
            "tags": {
                "displayName": "[variables('uniqueString')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('uniqueString')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('uniqueString'), '-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "name": "[concat(variables('uniqueString'), '/bootstrap')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript for Linux VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('uniqueString'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('_artifactsLocation'), '/arm/CustomScript/bootstrap.sh', parameters('_artifactsLocationSasToken'))]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "sh bootstrap.sh"
                }
            }
        }
    ],
    "outputs": {}
}